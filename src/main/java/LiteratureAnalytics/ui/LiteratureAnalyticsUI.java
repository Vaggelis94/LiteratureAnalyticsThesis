package LiteratureAnalytics.ui;

import java.io.BufferedReader;
import org.jsoup.Jsoup;

import javax.swing.*;
import javax.swing.text.Document;
import javax.swing.text.html.HTMLEditorKit;
import java.io.File;
import java.io.IOException;

import javax.xml.parsers.*;
import javax.xml.transform.*;
import javax.xml.transform.dom.*;
import javax.xml.transform.stream.*;
import org.w3c.dom.*;

public class LiteratureAnalyticsUI extends javax.swing.JFrame {

    /**
     * Creates new form LiteratureAnalyticsUI
     */
    public LiteratureAnalyticsUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        inputTextButton = new javax.swing.JButton();
        leftPanel = new javax.swing.JPanel();
        rightPanel = new javax.swing.JPanel();
        htmlScrollPane = new javax.swing.JScrollPane();
        htmlEditorPane = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        topPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ανάλυση Λογοτεχνικών Κειμένων", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        inputTextButton.setBackground(new java.awt.Color(255, 0, 51));
        inputTextButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        inputTextButton.setText("Εισαγωγή Κειμένου");
        inputTextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputTextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TopPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(TopPanelLayout);
        TopPanelLayout.setHorizontalGroup(
            TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputTextButton)
                .addContainerGap(428, Short.MAX_VALUE))
        );
        TopPanelLayout.setVerticalGroup(
            TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TopPanelLayout.createSequentialGroup()
                .addComponent(inputTextButton, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addContainerGap())
        );

        leftPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Επιλογή Ανάλυσης", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        javax.swing.GroupLayout LeftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(LeftPanelLayout);
        LeftPanelLayout.setHorizontalGroup(
            LeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 157, Short.MAX_VALUE)
        );
        LeftPanelLayout.setVerticalGroup(
            LeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 280, Short.MAX_VALUE)
        );

        htmlScrollPane.setViewportView(htmlEditorPane);

        javax.swing.GroupLayout RightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(RightPanelLayout);
        RightPanelLayout.setHorizontalGroup(
            RightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(htmlScrollPane)
                .addContainerGap())
        );
        RightPanelLayout.setVerticalGroup(
            RightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(htmlScrollPane)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InputTextButtonActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
        // File loading
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File myFile = chooser.getSelectedFile();

        HTMLEditorKit kit = new HTMLEditorKit();
        htmlEditorPane.setEditorKit(kit);

        Document doc = kit.createDefaultDocument();
        htmlEditorPane.setDocument(doc);

        try {
            String text = parseDocument(Jsoup.parse(myFile, "UTF-8", "").html());
            htmlEditorPane.setText(text);
            htmlEditorPane.setVisible(true);
        } catch (IOException e) {
            e.printStackTrace();
        }

        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
        DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
        org.w3c.dom.Document document = documentBuilder.newDocument();
        
        //Create Root
        Element rootElement = document.createElement("Play");
        document.appendChild(rootElement);
        
        Element startPlay = document.createElement("Start of Play");
        startPlay.appendChild(document.createTextNode("data"));
        rootElement.appendChild(startPlay);
        
        Element title = document.createElement("Title");
        title.appendChild(document.createTextNode("data"));
        rootElement.appendChild(title);
        
        Element author = document.createElement("Author");
        author.appendChild(document.createTextNode("data"));
        rootElement.appendChild(author);
        
        Element contents = document.createElement("Contents");
        contents.appendChild(document.createTextNode("data"));
        rootElement.appendChild(contents);
        
        Element introduction = document.createElement("Introduction");
        Element preamble = document.createElement("Preamble");
        preamble.appendChild(document.createTextNode("data"));
        Element preambleSnippets = document.createElement("Preamble Snippets");
        preambleSnippets.appendChild(document.createTextNode("data"));
        Element preambleFootnotes = document.createElement("Preamble Footnotes");
        preambleFootnotes.appendChild(document.createTextNode("data"));
        introduction.appendChild(preamble);
        introduction.appendChild(preambleSnippets);
        introduction.appendChild(preambleFootnotes);
        rootElement.appendChild(introduction);
        
        Element actualPlay = document.createElement("Actual Play");
        Element playIntro = document.createElement("Intro of Play");
        playIntro.appendChild(document.createTextNode("data"));
        Element characters = document.createElement("Characters");
        characters.appendChild(document.createTextNode("data"));
        Element act1 = document.createElement("Act 1");
        Element act1Snippets = document.createElement("Act 1 Snippets");
        act1Snippets.appendChild(document.createTextNode("data"));
        Element act1Dialogue = document.createElement("Act 1 Dialogue");
        act1Dialogue.appendChild(document.createTextNode("data"));
        act1.appendChild(act1Snippets);
        act1.appendChild(act1Dialogue);
        Element act2 = document.createElement("Act 2");
        Element act2Snippets = document.createElement("Act 2 Snippets");
        act2Snippets.appendChild(document.createTextNode("data"));
        Element act2Dialogue = document.createElement("Act 2 Dialogue");
        act2Dialogue.appendChild(document.createTextNode("data"));
        act2.appendChild(act2Snippets);
        act2.appendChild(act2Dialogue);
        Element act3 = document.createElement("Act 3");
        Element act3Snippets = document.createElement("Act 3 Snippets");
        act3Snippets.appendChild(document.createTextNode("data"));
        Element act3Dialogue = document.createElement("Act 3 Dialogue");
        act3Dialogue.appendChild(document.createTextNode("data"));
        act3.appendChild(act3Snippets);
        act3.appendChild(act3Dialogue);
        actualPlay.appendChild(playIntro);
        actualPlay.appendChild(characters);
        actualPlay.appendChild(act1);
        actualPlay.appendChild(act2);
        actualPlay.appendChild(act3);
        
        Element endPlay = document.createElement("End of Play");
        endPlay.appendChild(document.createTextNode("data"));
        rootElement.appendChild(endPlay);

    }

    private String parseDocument(String text) {
        String processedText = text;
        // Remove <meta> tags
        processedText = processedText.replaceAll("<meta([\\s\\S]+?)>", "");
        // Replace unknown characters with End of guarded area
        processedText = processedText.replaceAll("�", "—");

        return processedText;
    }

    public static void main(String args[]) throws IOException {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LiteratureAnalyticsUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LiteratureAnalyticsUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LiteratureAnalyticsUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LiteratureAnalyticsUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LiteratureAnalyticsUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton inputTextButton;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JPanel topPanel;
    private javax.swing.JEditorPane htmlEditorPane;
    private javax.swing.JScrollPane htmlScrollPane;
    // End of variables declaration//GEN-END:variables
}
